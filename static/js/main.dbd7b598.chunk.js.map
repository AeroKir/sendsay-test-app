{"version":3,"sources":["icons/icon-warning.svg","icons/icon-clip-big.svg","icons/LOGO.svg","store/initialState.js","constants/actionTypes.js","reducers/sendFormReducer.js","reducers/rootReducer.js","store/store.js","components/icon/Icon.jsx","components/message-send-form/MessageSendForm.jsx","components/input/Input.jsx","components/textarea/Textarea.jsx","components/button/Button.jsx","components/service-blocks/InfoBlock.jsx","components/input/InputTypeFile.jsx","components/input/AttachedFileField.jsx","components/file-receiver/FileReceiver.jsx","components/portal/Portal.jsx","components/modal/Modal.jsx","components/service-blocks/ExtraContentBlock.jsx","components/service-blocks/TextBlock.jsx","utilities/convertFileListToArray.js","utilities/reduceLongFileName.js","utilities/generateKey.js","containers/FileAttachmentContainer.jsx","constants/fileRestrictions.js","actions/attachedFilesActions.js","actions/getInputValue.js","actions/getSentMessageInfo.js","actions/resetFormState.js","services/sendsayAPI.js","constants/APIKey.js","actions/networkRequestsActions.js","config/sendFormConfig.js","utilities/getDateAndMonth.js","containers/MessageSendFormContainer.jsx","components/table/Table.jsx","utilities/isEqual.js","containers/SendedMessagesListContainer.jsx","layout/app-layout/AppLayout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","initialState","senderName","senderEmail","receiverName","receiverEmail","messageSubject","messageText","attachedFiles","sendedMessages","GET_INPUT_VALUE","GET_SENT_MESSAGE_INFO","STORE_ATTACHED_FILE","REMOVE_ATTACHED_FILE","RESET_FORM_STATE","GET_SENT_MESSAGE_ID","GET_SENT_MESSAGE_STATUS","sendFormReducer","state","action","type","obj","Object","keys","newState","i","length","payload","inputName","inputValue","name","content","encoding","filter","item","id","date","sendingDate","subject","status","statusValue","messagesWithID","map","message","messagesWithStatus","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Icon","src","alt","className","classes","classNames","defaultProps","MessageSendForm","onSubmit","children","encType","Input","label","placeholder","error","errorMessage","onChange","onBlur","inputHalfLeft","inputHalfRight","wrapperClasses","inputClasses","labelClasses","errorMessageClasses","htmlFor","Textarea","textareaClasses","Button","onClick","disabled","centered","buttonText","secondaryButton","buttonDesign","e","preventDefault","InfoBlock","infoBlockHeading","infoBlockMessage","transparent","positionAbsolute","showIcon","footerContent","infoBlockClasses","infoBlockIconClasses","InputTypeFile","React","forwardRef","ref","onFocus","withoutLabel","multiple","AttachedFileField","fileName","firstInRow","elementClasses","iconTrash","FileReceiver","onDragOver","onDragLeave","onDrop","dragOver","onKeyPress","refInput","fileReceiverClasses","dragZoneClasses","role","Portal","props","element","document","createElement","body","appendChild","this","removeChild","ReactDOM","createPortal","Component","Modal","isOpen","modalHeading","modalContent","onCancel","modalClasses","modalInnerClasses","ExtraContentBlock","TextBlock","convertFileListToArray","fileList","array","push","reduceLongFileName","fileExtensionDotIndex","lastIndexOf","fileExtensionName","slice","shortcutFileName","generateKey","Math","random","toString","substr","acceptedFileTypesArray","split","trim","FileAttachmentContainer","fileReceiverState","isFileReceiverShowed","isDragOver","isModalShowed","attachedFileSizes","rejectedFiles","warningMessage","indexForFileDeletion","nameFileForDeletion","isTtotalFilesSizeLimitAchieved","fileInputRef","createRef","deleteFile","bind","openFileDialog","closeInfoBlock","toggleModal","handleFileInputClick","handleFileInputChange","handleFileDelete","handleDragOver","handleDragLeave","handleDrop","convertFileToBase64","attachedFilesArray","forEach","file","size","includes","setState","prevState","concat","reduce","accumulator","currentValue","event","files","target","filesArray","checkAttachedFiles","checkAttachedFilesTotalSize","storeFileInRedux","reader","FileReader","readAsDataURL","onload","result","current","click","index","removeFileFromReduxStore","stopPropagation","nextState","dataTransfer","key","warningIcon","connect","dispatch","storeAttachedFile","removeAttachedFile","getInputValue","getSentMessageInfo","resetFormState","sendsay","Sendsay","apiKey","getSentMessageID","sendFilledForm","getState","data","mailRequestData","letter","text","attaches","sendwhen","mca","request","then","response","catch","idToNumber","parseInt","requestDeliveryStatus","trackData","trackMessageDelivery","statusToNumber","getMessageStatus","sendFormConfig","inputs","textarea","submitButton","infoBlock","heading","getDateAndMonth","toLocaleString","month","day","validateForm","validateEmailPattern","validateSenderEmail","match","validateReceiverEmail","MessageSendFormContainer","isMessageSendFormShowed","isInfoBlockShowed","touched","baseState","fileInput","handleInputChange","canBeSubmitted","handleSubmit","handleInputBlur","toggleInfoBlock","value","getInputVal","errors","some","x","hideWithTimer","timer","setTimeout","toggleAndResetForm","resetForm","sentMessageInfo","sendForm","resetFormInStore","getMessageID","Date","isDisabled","shouldDisplayInputError","hasError","shouldDisplay","input","hideBlockOnTimer","Table","isArraysOfObjectsEqual","arrFirst","arrSecond","every","isObjectsEqual","objFirst","objSecond","SendedMessagesListContainer","checkUpdates","interval","setInterval","prevProps","clearInterval","AppLayout","preventFileDrop","preventFileDragover","LogoIcon","App","Boolean","window","location","hostname","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbd7b598.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-warning.43ccd05e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-clip-big.85f937d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/LOGO.bb549f93.svg\";","const initialState = {\n  senderName: '',\n  senderEmail: '',\n  receiverName: '',\n  receiverEmail: '',\n  messageSubject: '',\n  messageText: '',\n  attachedFiles: [],\n  sendedMessages: [],\n};\n\nexport default initialState;\n","export const GET_INPUT_VALUE = 'GET_INPUT_VALUE';\nexport const GET_SENT_MESSAGE_INFO = 'GET_SENT_MESSAGE_INFO';\nexport const STORE_ATTACHED_FILE = 'STORE_ATTACHED_FILE';\nexport const REMOVE_ATTACHED_FILE = 'REMOVE_ATTACHED_FILE';\nexport const RESET_FORM_STATE = 'RESET_FORM_STATE';\nexport const GET_SENT_MESSAGE_ID = 'GET_SENT_MESSAGE_ID';\nexport const GET_SENT_MESSAGE_STATUS = 'GET_SENT_MESSAGE_STATUS';\n","import initialState from '../store/initialState';\nimport {\n  GET_INPUT_VALUE,\n  GET_SENT_MESSAGE_INFO,\n  STORE_ATTACHED_FILE,\n  REMOVE_ATTACHED_FILE,\n  RESET_FORM_STATE,\n  GET_SENT_MESSAGE_ID,\n  GET_SENT_MESSAGE_STATUS,\n} from '../constants/actionTypes';\n\nfunction sendFormReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_INPUT_VALUE:\n    {\n      const obj = Object.keys(state);\n      const newState = state;\n\n      for (let i = 0; i < obj.length; i += 1) {\n        if (obj[i] === action.payload.inputName) {\n          newState[obj[i]] = action.payload.inputValue;\n          return state;\n        }\n      }\n\n      return { ...state, newState };\n    }\n\n    case STORE_ATTACHED_FILE:\n    {\n      return {\n        ...state,\n        attachedFiles: [\n          ...state.attachedFiles,\n          { name: action.payload.name, content: action.payload.content, encoding: 'base64' },\n        ],\n      };\n    }\n\n    case REMOVE_ATTACHED_FILE:\n    {\n      return {\n        ...state,\n        attachedFiles: state.attachedFiles.filter((item) => item.name !== action.payload.name),\n      };\n    }\n\n    case RESET_FORM_STATE:\n    {\n      return {\n        senderName: '',\n        senderEmail: '',\n        receiverName: '',\n        receiverEmail: '',\n        messageSubject: '',\n        messageText: '',\n        attachedFiles: [],\n        sendedMessages: [...state.sendedMessages],\n      };\n    }\n\n    case GET_SENT_MESSAGE_INFO:\n    {\n      return {\n        ...state,\n        sendedMessages: [\n          ...state.sendedMessages,\n          {\n            id: '',\n            date: action.payload.sendingDate,\n            subject: action.payload.messageSubject,\n            status: 'В очереди',\n            statusValue: '',\n          },\n        ],\n      };\n    }\n\n    case GET_SENT_MESSAGE_ID:\n    {\n      const messagesWithID = state.sendedMessages.map((message) => {\n        if (!message.id) {\n          return { ...message, id: action.payload.id };\n        }\n        return { ...message };\n      });\n\n      return {\n        ...state,\n        sendedMessages: messagesWithID,\n      };\n    }\n\n    case GET_SENT_MESSAGE_STATUS:\n    {\n      const messagesWithStatus = state.sendedMessages.map((message) => {\n        if (message.id === action.payload.id) {\n          if (action.payload.status === -1) {\n            return { ...message, status: 'Отправлено', statusValue: action.payload.status };\n          }\n          if (action.payload.status < -1) {\n            return { ...message, status: 'Ошибка', statusValue: action.payload.status };\n          }\n          if (action.payload.status > -1) {\n            return { ...message, status: 'В очереди', statusValue: action.payload.status };\n          }\n        }\n\n        return { ...message };\n      });\n\n      return {\n        ...state,\n        sendedMessages: messagesWithStatus,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default sendFormReducer;\n","import { combineReducers } from 'redux';\nimport sendFormReducer from './sendFormReducer';\n\nconst rootReducer = combineReducers({\n  sendFormReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers/rootReducer';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Icon.css';\n\nfunction Icon({\n  src, alt, className,\n}) {\n  const classes = classNames(\n    'Icon--default',\n    className,\n  );\n\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={classes}\n    />\n  );\n}\n\nIcon.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  className: '',\n};\n\nexport default Icon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './MessageSendForm.css';\n\nfunction MessageSendForm({\n  onSubmit,\n  children,\n  className,\n  encType,\n}) {\n  const classes = classNames(\n    'MessageSendForm',\n    className,\n  );\n\n  return (\n    <form onSubmit={onSubmit} className={classes} encType={encType}>\n      <h1 className=\"Heading MessageSendForm-mainHeading\">Отправлялка сообщений</h1>\n      {children}\n    </form>\n  );\n}\n\nMessageSendForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  encType: PropTypes.string,\n};\n\nMessageSendForm.defaultProps = {\n  children: null,\n  className: '',\n  encType: '',\n};\n\nexport default MessageSendForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Input.css';\n\nfunction Input({\n  id,\n  type,\n  name,\n  className,\n  label,\n  placeholder,\n  error,\n  errorMessage,\n  onChange,\n  onBlur,\n  inputHalfLeft,\n  inputHalfRight,\n}) {\n  const wrapperClasses = classNames(\n    'InputWrapper',\n    className,\n    {\n      'InputWrapper--halfLeft': inputHalfLeft,\n      'InputWrapper--halfRight': inputHalfRight,\n    },\n  );\n\n  const inputClasses = classNames(\n    'Input',\n    className,\n    {\n      'Input--halfLeft': inputHalfLeft,\n      'Input--halfRight': inputHalfRight,\n    },\n  );\n\n  const labelClasses = classNames(\n    'Input-label',\n    className,\n  );\n\n  const errorMessageClasses = classNames('is-error');\n\n  return (\n    <div className={wrapperClasses}>\n      <label htmlFor={id} className={labelClasses}>\n        {label}\n      </label>\n      <input\n        id={id}\n        type={type}\n        name={name}\n        className={inputClasses}\n        placeholder={placeholder}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      {error && <span className={errorMessageClasses}>{errorMessage}</span>}\n    </div>\n  );\n}\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  inputHalfLeft: PropTypes.bool,\n  inputHalfRight: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  name: '',\n  className: '',\n  label: '',\n  placeholder: 'Input placeholder',\n  error: false,\n  errorMessage: '',\n  onChange: () => { },\n  onBlur: () => { },\n  inputHalfLeft: false,\n  inputHalfRight: false,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Textarea.css';\n\nfunction Textarea({\n  id, className, label, name, placeholder, onChange, onBlur, error, errorMessage,\n}) {\n  const wrapperClasses = classNames(\n    'TextareaWrapper',\n    className,\n  );\n\n  const labelClasses = classNames(\n    'Textarea-label',\n    className,\n  );\n\n  const textareaClasses = classNames(\n    'Textarea',\n    className,\n  );\n\n  const errorMessageClasses = classNames('is-error-textarea');\n\n  return (\n    <div className={wrapperClasses}>\n      <label htmlFor={id} className={labelClasses}>\n        {label}\n      </label>\n      <textarea\n        id={id}\n        name={name}\n        className={textareaClasses}\n        placeholder={placeholder}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n      {error && <span className={errorMessageClasses}>{errorMessage}</span>}\n    </div>\n  );\n}\n\nTextarea.propTypes = {\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  error: PropTypes.bool,\n  errorMessage: PropTypes.string,\n};\n\nTextarea.defaultProps = {\n  className: '',\n  label: '',\n  name: '',\n  placeholder: 'Textarea placeholder',\n  onChange: () => { },\n  onBlur: () => { },\n  error: false,\n  errorMessage: '',\n};\n\nexport default Textarea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './Button.css';\n\nfunction Button({\n  className, onClick, disabled, centered, buttonText, secondaryButton,\n}) {\n  const onClickAction = (e) => {\n    if (disabled) {\n      e.preventDefault();\n    }\n    return onClick(e);\n  };\n\n  const buttonDesign = classNames(\n    'Button',\n    className,\n    {\n      'is-disabled': disabled,\n      'is-centered': centered,\n      'Button--secondary': secondaryButton,\n    },\n  );\n\n  return (\n    <button\n      className={buttonDesign}\n      type=\"submit\"\n      onClick={onClickAction}\n      disabled={disabled}\n    >\n      {buttonText}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  centered: PropTypes.bool,\n  buttonText: PropTypes.string,\n  secondaryButton: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  className: '',\n  onClick: () => { },\n  disabled: false,\n  centered: false,\n  buttonText: 'Button',\n  secondaryButton: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Icon from '../icon/Icon';\n\nimport './InfoBlock.css';\n\nfunction InfoBlock({\n  children,\n  className,\n  infoBlockHeading,\n  infoBlockMessage,\n  transparent,\n  positionAbsolute,\n  src,\n  alt,\n  showIcon,\n  footerContent,\n}) {\n  const infoBlockClasses = classNames(\n    'InfoBlock',\n    className,\n    {\n      'InfoBlock--transparent': transparent,\n      'InfoBlock--positionAbsolute': positionAbsolute,\n    },\n  );\n\n  const infoBlockIconClasses = classNames(\n    'InfoBlock-icon',\n    { 'is-showed': showIcon },\n  );\n\n  return (\n    <div className={infoBlockClasses}>\n      <div className=\"InfoBlock-content\">\n        <Icon src={src} alt={alt} className={infoBlockIconClasses} />\n        <h1 className=\"InfoBlock-mainHeading\">{infoBlockHeading}</h1>\n        <p className=\"InfoBlock-message\">\n          {infoBlockMessage}\n        </p>\n        {children}\n      </div>\n      <footer className=\"InfoBlock-footer\">{footerContent}</footer>\n    </div>\n  );\n}\n\nInfoBlock.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  infoBlockHeading: PropTypes.string,\n  infoBlockMessage: PropTypes.node,\n  transparent: PropTypes.bool,\n  positionAbsolute: PropTypes.bool,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  showIcon: PropTypes.bool,\n  footerContent: PropTypes.node,\n};\n\nInfoBlock.defaultProps = {\n  children: null,\n  className: '',\n  infoBlockHeading: 'Info Block Heading',\n  infoBlockMessage: 'Info Block Message',\n  transparent: false,\n  positionAbsolute: false,\n  src: '',\n  alt: '',\n  showIcon: false,\n  footerContent: null,\n};\n\nexport default InfoBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './InputTypeFile.css';\n\nconst InputTypeFile = React.forwardRef(({\n  id,\n  name,\n  className,\n  onChange,\n  onFocus,\n  onClick,\n  label,\n  withoutLabel,\n}, ref) => {\n  const wrapperClasses = classNames(\n    'InputTypeFileWrapper',\n    className,\n  );\n\n  const inputClasses = classNames(\n    'InputTypeFile',\n    className,\n  );\n\n  const labelClasses = classNames(\n    'InputTypeFile-label',\n    className,\n    { 'InputTypeFile-withoutLabel': withoutLabel },\n  );\n\n  return (\n    <div className={wrapperClasses}>\n      <input\n        id={id}\n        type=\"file\"\n        ref={ref}\n        name={name}\n        className={inputClasses}\n        onChange={onChange}\n        onFocus={onFocus}\n        onClick={onClick}\n        multiple\n      />\n      <label htmlFor={id} className={labelClasses}>\n        {label}\n      </label>\n    </div>\n  );\n});\n\nInputTypeFile.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  name: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onClick: PropTypes.func,\n  label: PropTypes.string,\n  withoutLabel: PropTypes.bool,\n};\n\nInputTypeFile.defaultProps = {\n  id: '',\n  name: '',\n  className: '',\n  onChange: () => { },\n  onFocus: () => { },\n  onClick: () => { },\n  label: '',\n  withoutLabel: false,\n};\n\nexport default InputTypeFile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '../button/Button';\nimport Icon from '../icon/Icon';\n\nimport './AttachedFileField.css';\nimport iconTrash from '../../icons/icon-clip-big.svg';\n\nfunction AttachedFileField({\n  id,\n  className,\n  fileName,\n  onClick,\n  firstInRow,\n  children,\n}) {\n  const wrapperClasses = classNames(\n    'AttachedFileFieldWrapper',\n    className,\n  );\n\n  const elementClasses = classNames(\n    'AttachedFileField',\n    className,\n    { 'AttachedFileField--firstInRow': firstInRow },\n  );\n\n  return (\n    <div className={wrapperClasses}>\n      <div className={elementClasses} id={id}>\n        <Icon\n          className=\"AttachedFileField-icon\"\n          src={iconTrash}\n          alt=\"Trash icon\"\n        />\n        <span className=\"AttachedFileField-fileNameField\">{fileName}</span>\n        <Button\n          type=\"button\"\n          className=\"AttachedFileField-button\"\n          buttonText=\"Удалить\"\n          onClick={onClick}\n        />\n      </div>\n      {children}\n    </div>\n  );\n}\n\nAttachedFileField.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  className: PropTypes.string,\n  fileName: PropTypes.string,\n  firstInRow: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n\nAttachedFileField.defaultProps = {\n  id: '',\n  className: '',\n  fileName: '',\n  firstInRow: false,\n  onClick: () => { },\n  children: null,\n};\n\nexport default AttachedFileField;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport InputTypeFile from '../input/InputTypeFile';\n\nimport './FileReceiver.css';\n\nfunction FileReceiver({\n  className,\n  onDragOver,\n  onDragLeave,\n  onDrop,\n  onChange,\n  dragOver,\n  onClick,\n  onKeyPress,\n  refInput,\n}) {\n  const fileReceiverClasses = classNames(\n    'FileReceiver',\n    className,\n  );\n\n  const dragZoneClasses = classNames(\n    'FileReceiver-dragZone',\n    className,\n    { 'is-dragOver': dragOver },\n  );\n\n  return (\n    <div className={fileReceiverClasses}>\n      <div\n        className={dragZoneClasses}\n        onDragOver={onDragOver}\n        onDragLeave={onDragLeave}\n        onDrop={onDrop}\n        onChange={onChange}\n        onClick={onClick}\n        onKeyPress={onKeyPress}\n        role=\"dialog\"\n      >\n        <div className=\"FileReceiver-content\">\n          <h1 className=\"FileReceiver-mainHeading\">Бросайте файлы сюда, я ловлю</h1>\n          <p className=\"FileReceiver-explanation\">\n            Мы принимаем картинки (jpg, png, gif), офисные файлы (doc, xls, pdf) и zip-архивы.\n            Размеры файла до 5 МБ\n          </p>\n        </div>\n        <InputTypeFile ref={refInput} onClick={onClick} withoutLabel />\n      </div>\n    </div>\n  );\n}\n\nFileReceiver.propTypes = {\n  className: PropTypes.string,\n  onDragOver: PropTypes.func,\n  onDragLeave: PropTypes.func,\n  onDrop: PropTypes.func,\n  onChange: PropTypes.func,\n  dragOver: PropTypes.bool,\n  onClick: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  refInput: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.instanceOf(HTMLInputElement) }),\n  ]),\n};\n\nFileReceiver.defaultProps = {\n  className: '',\n  onDragOver: () => { },\n  onDragLeave: () => { },\n  onDrop: () => { },\n  onChange: () => { },\n  dragOver: false,\n  onClick: () => { },\n  onKeyPress: () => { },\n  refInput: () => { },\n};\n\nexport default FileReceiver;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nclass Portal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.element = document.createElement('div');\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.element);\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.element);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return ReactDOM.createPortal(children, this.element);\n  }\n}\n\nPortal.propTypes = {\n  children: PropTypes.node,\n};\n\nPortal.defaultProps = {\n  children: null,\n};\n\nexport default Portal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from '../portal/Portal';\nimport Button from '../button/Button';\n\nimport './Modal.css';\n\nfunction Modal({\n  isOpen,\n  className,\n  modalHeading,\n  modalContent,\n  onCancel,\n  onSubmit,\n  children,\n}) {\n  const modalClasses = classNames(\n    'Modal',\n    className,\n  );\n\n  const modalInnerClasses = classNames(\n    'ModalInner',\n    className,\n  );\n\n  return (\n    <>\n      {isOpen && (\n        <Portal>\n          <div className={modalClasses}>\n            <div className={modalInnerClasses}>\n              <h1 className=\"Modal-heading\">{modalHeading}</h1>\n              <p className=\"Modal-content\">{modalContent}</p>\n              {children}\n              <footer className=\"Modal-footer\">\n                <Button\n                  type=\"button\"\n                  className=\"Modal-button Modal-button--cancel\"\n                  buttonText=\"Отмена\"\n                  onClick={onCancel}\n                />\n                <Button\n                  type=\"submit\"\n                  className=\"Modal-button Modal-button--confirm\"\n                  buttonText=\"Подтвердить\"\n                  onClick={onSubmit}\n                />\n              </footer>\n            </div>\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n}\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  className: PropTypes.string,\n  modalHeading: PropTypes.string,\n  modalContent: PropTypes.string,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node,\n};\n\nModal.defaultProps = {\n  isOpen: false,\n  className: '',\n  modalHeading: 'Modal heading',\n  modalContent: 'Modal content',\n  onCancel: () => { },\n  onSubmit: () => { },\n  children: null,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './ExtraContentBlock.css';\n\nfunction ExtraContentBlock({ children, className }) {\n  const classes = classNames(\n    'ExtraContentBlock',\n    className,\n  );\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n}\n\nExtraContentBlock.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nExtraContentBlock.defaultProps = {\n  children: 'Default button',\n  className: '',\n};\n\nexport default ExtraContentBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport './TextBlock.css';\n\nfunction TextBlock({ children, className }) {\n  const classes = classNames(\n    'TextBlock',\n    className,\n  );\n\n  return (\n    <span className={classes}>\n      {children}\n    </span>\n  );\n}\n\nTextBlock.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\nTextBlock.defaultProps = {\n  children: 'Default button',\n  className: '',\n};\n\nexport default TextBlock;\n","function convertFileListToArray(fileList) {\n  const array = [];\n  for (let i = 0; i < fileList.length; i += 1) {\n    array.push(fileList[i]);\n  }\n  return array;\n}\n\nexport default convertFileListToArray;\n","function reduceLongFileName(fileName) {\n  const MAX_FILE_NAME_LENGTH = 23;\n  if (fileName.length > MAX_FILE_NAME_LENGTH) {\n    const fileExtensionDotIndex = fileName.lastIndexOf('.');\n    const fileExtensionName = fileName.slice(fileExtensionDotIndex - fileName.length);\n    const shortcutFileName = fileName.slice(0, 20);\n    const reducedFileName = `${shortcutFileName}..${fileExtensionName}`;\n\n    return reducedFileName;\n  }\n\n  return fileName;\n}\n\nexport default reduceLongFileName;\n","function generateKey() {\n  const key = `_${Math.random().toString(16).substr(2, 9)}`;\n  return key;\n}\n\nexport default generateKey;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport InputTypeFile from '../components/input/InputTypeFile';\nimport AttachedFileField from '../components/input/AttachedFileField';\nimport FileReceiver from '../components/file-receiver/FileReceiver';\nimport InfoBlock from '../components/service-blocks/InfoBlock';\nimport Modal from '../components/modal/Modal';\nimport ExtraContentBlock from '../components/service-blocks/ExtraContentBlock';\nimport TextBlock from '../components/service-blocks/TextBlock';\nimport Button from '../components/button/Button';\n\nimport { storeAttachedFile, removeAttachedFile } from '../actions/attachedFilesActions';\n\nimport convertFileListToArray from '../utilities/convertFileListToArray';\nimport reduceLongFileName from '../utilities/reduceLongFileName';\nimport generateKey from '../utilities/generateKey';\n\nimport { ACCEPTED_FILE_TYPES, MAX_BYTES_PER_FILE, MAX_BYTES_PER_SINGLE_EMAIL } from '../constants/fileRestrictions';\nimport warningIcon from '../icons/icon-warning.svg';\n\nconst acceptedFileTypesArray = ACCEPTED_FILE_TYPES.split(',').map((item) => item.trim());\n\nclass FileAttachmentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileReceiverState: {\n        isFileReceiverShowed: false,\n        isDragOver: false,\n      },\n      isModalShowed: false,\n      attachedFiles: [],\n      attachedFileSizes: [],\n      rejectedFiles: [],\n      warningMessage: '',\n      indexForFileDeletion: 0,\n      nameFileForDeletion: '',\n      isTtotalFilesSizeLimitAchieved: false,\n    };\n\n    this.fileInputRef = React.createRef();\n\n    this.deleteFile = this.deleteFile.bind(this);\n\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.closeInfoBlock = this.closeInfoBlock.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleFileInputClick = this.handleFileInputClick.bind(this);\n    this.handleFileInputChange = this.handleFileInputChange.bind(this);\n    this.handleFileDelete = this.handleFileDelete.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.handleDragLeave = this.handleDragLeave.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.convertFileToBase64 = this.convertFileToBase64.bind(this);\n  }\n\n  checkAttachedFiles(attachedFilesArray) {\n    attachedFilesArray.forEach((file) => {\n      if (file.size >= MAX_BYTES_PER_FILE || !acceptedFileTypesArray.includes(file.type)) {\n        this.setState((prevState) => ({\n          fileReceiverState: !prevState.fileReceiverState.isFileReceiverShowed,\n          rejectedFiles: prevState.rejectedFiles.concat(file),\n        }));\n\n        if (file.size >= MAX_BYTES_PER_FILE) {\n          this.setState({\n            warningMessage: 'Файлы слишком большие. Размер одного файла не должен превышать 5 МБ.',\n          });\n        }\n\n        if (!acceptedFileTypesArray.includes(file.type)) {\n          this.setState({\n            warningMessage: 'Недопустимый формат файла. Мы принимаем картинки (jpg, png, gif), офисные файлы (doc, xls, pdf) и zip-архивы.',\n          });\n        }\n\n        if (file.size >= MAX_BYTES_PER_FILE && !acceptedFileTypesArray.includes(file.type)) {\n          this.setState({\n            warningMessage: 'Недопустимый формат и размер файла. Мы принимаем картинки (jpg, png, gif), офисные файлы (doc, xls, pdf) и zip-архивы. Размер одного файла не должен превышать 5 МБ.',\n          });\n        }\n      }\n\n      if (file.size <= MAX_BYTES_PER_FILE && acceptedFileTypesArray.includes(file.type)) {\n        this.setState((prevState) => ({\n          fileReceiverState: !prevState.fileReceiverState.isFileReceiverShowed,\n          attachedFiles: prevState.attachedFiles.concat(file),\n          attachedFileSizes: prevState.attachedFileSizes.concat(file.size),\n        }));\n\n        this.convertFileToBase64(file);\n      }\n    });\n  }\n\n  checkAttachedFilesTotalSize() {\n    const { attachedFileSizes } = this.state;\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    const totalFilesSize = attachedFileSizes.reduce(reducer, attachedFileSizes[0]);\n\n    if (totalFilesSize >= MAX_BYTES_PER_SINGLE_EMAIL) {\n      this.setState({\n        isTtotalFilesSizeLimitAchieved: true,\n        warningMessage: `Вы достигли максимально возможного размера прикрепляемых файлов на одно письмо. Максимальный размер не должен превышать 20 МБ.\n        Пожалуйста, удалите один или несколько файлов.`,\n      });\n    }\n  }\n\n  handleFileInputChange(event) {\n    const { files } = event.target;\n    const filesArray = convertFileListToArray(files);\n\n    this.checkAttachedFiles(filesArray);\n    this.checkAttachedFilesTotalSize();\n  }\n\n  convertFileToBase64(file) {\n    const { storeFileInRedux } = this.props;\n    const fileName = file.name;\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      storeFileInRedux(fileName, reader.result);\n    };\n  }\n\n  handleFileInputClick() {\n    this.setState({\n      fileReceiverState: {\n        isFileReceiverShowed: true,\n      },\n      rejectedFiles: [],\n    });\n  }\n\n  openFileDialog(event) {\n    event.preventDefault();\n\n    this.setState({\n      rejectedFiles: [],\n    });\n\n    this.fileInputRef.current.click();\n  }\n\n  toggleModal() {\n    this.setState((prevState) => ({\n      isModalShowed: !prevState.isModalShowed,\n    }));\n  }\n\n  closeInfoBlock() {\n    this.setState({\n      rejectedFiles: [],\n      isTtotalFilesSizeLimitAchieved: false,\n    });\n  }\n\n  handleFileDelete(index, name) {\n    this.setState((prevState) => ({\n      isModalShowed: !prevState.isModalShowed,\n      indexForFileDeletion: index,\n      nameFileForDeletion: name,\n    }));\n  }\n\n  deleteFile() {\n    const {\n      attachedFiles,\n      attachedFileSizes,\n      indexForFileDeletion,\n      nameFileForDeletion,\n    } = this.state;\n    const { removeFileFromReduxStore } = this.props;\n\n    this.setState({\n      attachedFiles: attachedFiles.filter((item, i) => i !== indexForFileDeletion),\n      attachedFileSizes: attachedFileSizes.filter((item, i) => i !== indexForFileDeletion),\n    });\n\n    this.setState((prevState) => ({\n      isModalShowed: !prevState.isModalShowed,\n    }));\n\n    removeFileFromReduxStore(nameFileForDeletion);\n  }\n\n  handleDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.setState((prevState) => {\n      const nextState = prevState;\n      nextState.fileReceiverState.isDragOver = true;\n      return nextState;\n    });\n  }\n\n  handleDragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.setState((prevState) => {\n      const nextState = prevState;\n      nextState.fileReceiverState.isDragOver = false;\n      return nextState;\n    });\n  }\n\n  handleDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { files } = event.dataTransfer;\n    const filesArray = convertFileListToArray(files);\n\n    this.checkAttachedFiles(filesArray);\n    this.checkAttachedFilesTotalSize();\n  }\n\n  render() {\n    const {\n      fileReceiverState: { isFileReceiverShowed, isDragOver },\n      isModalShowed,\n      attachedFiles,\n      rejectedFiles,\n      warningMessage,\n      isTtotalFilesSizeLimitAchieved,\n    } = this.state;\n\n    return (\n      <>\n        {isFileReceiverShowed && (\n          <FileReceiver\n            id=\"file-receiver\"\n            ref={this.fileInputRef}\n            onDragOver={this.handleDragOver}\n            onDragLeave={this.handleDragLeave}\n            onDrop={this.handleDrop}\n            dragOver={isDragOver}\n            onChange={this.handleFileInputChange}\n            onClick={this.openFileDialog}\n          />\n        )}\n\n        {attachedFiles.length > 0 ? attachedFiles.map((item, index) => (\n          <AttachedFileField\n            key={generateKey()}\n            fileName={reduceLongFileName(item.name)}\n            onClick={() => this.handleFileDelete(index, item.name)}\n            firstInRow={index % 2 === 0}\n          />\n        )) : null}\n\n        <Modal\n          isOpen={isModalShowed}\n          modalHeading=\"Подтвердите действие\"\n          modalContent=\"Файл будет удалён.\"\n          onCancel={this.toggleModal}\n          onSubmit={this.deleteFile}\n        />\n\n        {\n          rejectedFiles.length > 0 && !isTtotalFilesSizeLimitAchieved ? (\n            <InfoBlock\n              infoBlockHeading=\"Следующие файлы не были прикреплены:\"\n              infoBlockMessage={warningMessage}\n              transparent\n              positionAbsolute\n              showIcon\n              src={warningIcon}\n              alt=\"Warning icon\"\n              footerContent={(\n                <>\n                  <InputTypeFile\n                    id=\"file-input-additional\"\n                    type=\"file\"\n                    label=\"Прикрепить другой файл\"\n                    onClick={this.openFileDialog}\n                    onChange={this.handleFileInputChange}\n                  />\n                  <Button onClick={this.closeInfoBlock} buttonText=\"Закрыть\" secondaryButton />\n                </>\n              )}\n            >\n              <ExtraContentBlock>\n                {rejectedFiles.map((item) => (\n                  <Fragment key={generateKey()}>\n                    <TextBlock>\n                      Файл\n                      {' '}\n                      {reduceLongFileName(item.name)}\n                    </TextBlock>\n                  </Fragment>\n\n                ))}\n              </ExtraContentBlock>\n            </InfoBlock>\n          ) : null\n        }\n\n        {isTtotalFilesSizeLimitAchieved ? (\n          <InfoBlock\n            infoBlockHeading=\"Астанавитесь!\"\n            infoBlockMessage={warningMessage}\n            transparent\n            positionAbsolute\n            showIcon\n            src={warningIcon}\n            alt=\"Warning icon\"\n            footerContent={(\n              <Button\n                onClick={this.closeInfoBlock}\n                buttonText=\"Понятно\"\n                secondaryButton\n                centered\n              />\n            )}\n          />\n        ) : null}\n\n        <InputTypeFile\n          ref={this.fileInputRef}\n          id=\"file-input\"\n          type=\"file\"\n          label=\"Прикрепить файл\"\n          onClick={this.handleFileInputClick}\n          onChange={this.handleFileInputChange}\n        />\n      </>\n    );\n  }\n}\n\nFileAttachmentContainer.propTypes = {\n  storeFileInRedux: PropTypes.func,\n  removeFileFromReduxStore: PropTypes.func,\n};\n\nFileAttachmentContainer.defaultProps = {\n  storeFileInRedux: () => { },\n  removeFileFromReduxStore: () => { },\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    storeFileInRedux: (name, content) => dispatch(storeAttachedFile(name, content)),\n    removeFileFromReduxStore: (name) => dispatch(removeAttachedFile(name)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(FileAttachmentContainer);\n","// Max size per one file 5MB = 5242880 bytes\nexport const MAX_BYTES_PER_FILE = 5242880;\n\n// Max size per single email 20MB = 20971520 bytes\nexport const MAX_BYTES_PER_SINGLE_EMAIL = 20971520;\n\nexport const ACCEPTED_FILE_TYPES = 'image/png, image/jpg, image/jpeg, image/gif, application/pdf, text/plain, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/zip';\n","import { STORE_ATTACHED_FILE, REMOVE_ATTACHED_FILE } from '../constants/actionTypes';\n\nexport function storeAttachedFile(name, content) {\n  return {\n    type: STORE_ATTACHED_FILE,\n    payload: { name, content },\n  };\n}\n\nexport function removeAttachedFile(name) {\n  return {\n    type: REMOVE_ATTACHED_FILE,\n    payload: { name },\n  };\n}\n","import { GET_INPUT_VALUE } from '../constants/actionTypes';\n\nfunction getInputValue(inputName, inputValue) {\n  return {\n    type: GET_INPUT_VALUE,\n    payload: {\n      inputName,\n      inputValue,\n    },\n  };\n}\n\nexport default getInputValue;\n","import { GET_SENT_MESSAGE_INFO } from '../constants/actionTypes';\n\nfunction getSentMessageInfo(sendingDate, messageSubject) {\n  return {\n    type: GET_SENT_MESSAGE_INFO,\n    payload: { sendingDate, messageSubject },\n  };\n}\n\nexport default getSentMessageInfo;\n","import { RESET_FORM_STATE } from '../constants/actionTypes';\n\nfunction resetFormState() {\n  return {\n    type: RESET_FORM_STATE,\n  };\n}\n\nexport default resetFormState;\n","import Sendsay from 'sendsay-api';\nimport API_KEY from '../constants/APIKey';\n\nconst sendsay = new Sendsay({ apiKey: API_KEY });\n\nexport function sendRequest(data) {\n  return sendsay.request(data)\n    .then((response) => response)\n    .catch((error) => error);\n}\n\nexport function trackMessageDelivery(id) {\n  const trackData = {\n    action: 'track.get',\n    id,\n  };\n  return sendsay.request(trackData)\n    .then((response) => response)\n    .catch((error) => error);\n}\n","const API_KEY = '182X7bBv3Ibe7VFJVJZlg-6gGx-8eqkito0sOlnTjT8XMlt2p37KDm93ZaaqE15CIghlBxOIOu2xLcUkC';\nexport default API_KEY;\n","import { sendRequest, trackMessageDelivery } from '../services/sendsayAPI';\nimport { GET_SENT_MESSAGE_ID, GET_SENT_MESSAGE_STATUS } from '../constants/actionTypes';\n\nexport function getSentMessageID(id) {\n  return {\n    type: GET_SENT_MESSAGE_ID,\n    payload: { id },\n  };\n}\n\nexport function sendFilledForm() {\n  return (dispatch, getState) => {\n    const state = getState().sendFormReducer;\n\n    const mailRequestData = {\n      action: 'issue.send.test',\n      letter: {\n        subject: state.messageSubject,\n        'from.name': state.senderName,\n        'from.email': state.senderEmail,\n        'to.name': state.receiverName,\n        message: { text: state.messageText },\n        attaches: state.attachedFiles,\n      },\n      sendwhen: 'test',\n      mca: [\n        state.receiverEmail,\n      ],\n    };\n\n    sendRequest(mailRequestData)\n      .then((response) => response['track.id'])\n      .then((id) => {\n        const idToNumber = parseInt(id, 10);\n        dispatch(getSentMessageID(idToNumber));\n      })\n      .catch((error) => error);\n  };\n}\n\nexport function getMessageStatus(id, status) {\n  return {\n    type: GET_SENT_MESSAGE_STATUS,\n    payload: { id, status },\n  };\n}\n\nexport function requestDeliveryStatus(id) {\n  return (dispatch) => {\n    if (id) {\n      trackMessageDelivery(id)\n        .then((response) => {\n          const idToNumber = parseInt(response.obj.id, 10);\n          const statusToNumber = parseInt(response.obj.status, 10);\n          dispatch(getMessageStatus(idToNumber, statusToNumber));\n        })\n        .catch((error) => error);\n    }\n  };\n}\n","const sendFormConfig = {\n  inputs: [\n    {\n      id: 'sender-name-input',\n      type: 'text',\n      name: 'senderName',\n      label: 'От кого',\n      placeholder: 'Имя',\n      inputHalfLeft: true,\n      errorMessage: 'Поле \"От кого\" не может быть пустым',\n    },\n    {\n      id: 'sender-email-input',\n      type: 'email',\n      name: 'senderEmail',\n      placeholder: 'Email',\n      inputHalfRight: true,\n      errorMessage: 'Введите корректный Email',\n    },\n    {\n      id: 'receiver-name-input',\n      type: 'text',\n      name: 'receiverName',\n      label: 'Кому',\n      placeholder: 'Имя',\n      inputHalfLeft: true,\n      errorMessage: 'Поле \"Кому\" не может быть пустым',\n    },\n    {\n      id: 'receiver-email-input',\n      type: 'email',\n      name: 'receiverEmail',\n      placeholder: 'Email',\n      inputHalfRight: true,\n      errorMessage: 'Введите корректный Email',\n    },\n    {\n      id: 'message-subject-input',\n      type: 'text',\n      name: 'messageSubject',\n      label: 'Тема письма',\n      placeholder: '',\n      errorMessage: 'Тема письма не может быть пустой',\n    },\n  ],\n  textarea: {\n    id: 'message-content',\n    name: 'messageText',\n    label: 'Сообщение',\n    placeholder: '',\n    errorMessage: 'Сообщение не может быть пустым',\n  },\n  submitButton: {\n    type: 'submit',\n    buttonText: 'Отправить',\n  },\n  infoBlock: {\n    heading: 'Сообщение поставлено в очередь на отправку',\n  },\n};\n\nexport default sendFormConfig;\n","/**\n * Get date and month in shorthand format\n * Like a '19 февраля' for 'ru' locale, for example\n */\n\nfunction getDateAndMonth(date) {\n  const options = {\n    month: 'long',\n    day: 'numeric',\n  };\n  const dateAndMonth = date.toLocaleString('ru', options);\n  return dateAndMonth;\n}\n\nexport default getDateAndMonth;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport MessageSendForm from '../components/message-send-form/MessageSendForm';\nimport Input from '../components/input/Input';\nimport Textarea from '../components/textarea/Textarea';\nimport Button from '../components/button/Button';\nimport InfoBlock from '../components/service-blocks/InfoBlock';\nimport FileAttachmentContainer from './FileAttachmentContainer';\n\nimport getInputValue from '../actions/getInputValue';\nimport getSentMessageInfo from '../actions/getSentMessageInfo';\nimport resetFormState from '../actions/resetFormState';\nimport { sendFilledForm, getSentMessageID } from '../actions/networkRequestsActions';\n\nimport sendFormConfig from '../config/sendFormConfig';\nimport getDateAndMonth from '../utilities/getDateAndMonth';\n\nfunction validateForm(\n  senderName,\n  senderEmail,\n  receiverName,\n  receiverEmail,\n  messageSubject,\n  messageText,\n) {\n  const validateEmailPattern = /\\S+@\\S+\\.\\S+/;\n  const validateSenderEmail = senderEmail.match(validateEmailPattern);\n  const validateReceiverEmail = receiverEmail.match(validateEmailPattern);\n\n  /**\n   * \"true\" means that our form is invalid.\n   * Will evaluate to \"false\" when a user fills inputs correctly.\n   */\n\n  return {\n    senderName: senderName.length === 0,\n    senderEmail: senderEmail.length === 0 || validateSenderEmail === null,\n    receiverName: receiverName.length === 0,\n    receiverEmail: receiverEmail.length === 0 || validateReceiverEmail === null,\n    messageSubject: messageSubject.length === 0,\n    messageText: messageText.length === 0,\n  };\n}\n\nclass MessageSendFormContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMessageSendFormShowed: true,\n      isInfoBlockShowed: false,\n\n      senderName: '',\n      senderEmail: '',\n      receiverName: '',\n      receiverEmail: '',\n      messageSubject: '',\n      messageText: '',\n\n      touched: {\n        senderName: false,\n        senderEmail: false,\n        receiverName: false,\n        receiverEmail: false,\n        messageSubject: false,\n        messageText: false,\n      },\n    };\n\n    this.baseState = this.state;\n\n    this.fileInput = React.createRef();\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.canBeSubmitted = this.canBeSubmitted.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputBlur = this.handleInputBlur.bind(this);\n    this.toggleInfoBlock = this.toggleInfoBlock.bind(this);\n  }\n\n  handleInputChange(event) {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n\n    const { getInputVal } = this.props;\n    getInputVal(name, value);\n  }\n\n  handleInputBlur(event) {\n    const { name } = event.target;\n    const { touched } = this.state;\n    this.setState({\n      touched: { ...touched, [name]: true },\n    });\n  }\n\n  canBeSubmitted() {\n    const {\n      senderName,\n      senderEmail,\n      receiverName,\n      receiverEmail,\n      messageSubject,\n      messageText,\n    } = this.state;\n\n    const errors = validateForm(senderName, senderEmail, receiverName, receiverEmail, messageSubject, messageText);\n    const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n    return !isDisabled;\n  }\n\n  toggleInfoBlock() {\n    this.hideWithTimer();\n    this.setState((prevState) => ({\n      isMessageSendFormShowed: !prevState.isMessageSendFormShowed,\n      isInfoBlockShowed: !prevState.isInfoBlockShowed,\n    }));\n  }\n\n  hideWithTimer() {\n    this.timer = setTimeout(() => {\n      this.toggleAndResetForm();\n    }, 5000);\n  }\n\n\n  toggleAndResetForm() {\n    this.setState((prevState) => ({\n      isMessageSendFormShowed: !prevState.isMessageSendFormShowed,\n      isInfoBlockShowed: !prevState.isInfoBlockShowed,\n    }));\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.setState(this.baseState);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (!this.canBeSubmitted()) {\n      return;\n    }\n\n    const { messageSubject } = this.state;\n    const {\n      sentMessageInfo, sendForm, resetFormInStore, getMessageID,\n    } = this.props;\n\n    const sentDate = getDateAndMonth(new Date());\n    sentMessageInfo(sentDate, messageSubject);\n\n    sendForm();\n    getMessageID();\n    resetFormInStore();\n\n    this.toggleInfoBlock();\n  }\n\n  render() {\n    const {\n      isMessageSendFormShowed,\n      senderName,\n      senderEmail,\n      receiverName,\n      receiverEmail,\n      messageSubject,\n      messageText,\n      touched,\n    } = this.state;\n\n    const errors = validateForm(senderName, senderEmail, receiverName, receiverEmail, messageSubject, messageText);\n    const isDisabled = Object.keys(errors).some((x) => errors[x]);\n\n    const shouldDisplayInputError = (name) => {\n      const hasError = errors[name];\n      const shouldDisplay = touched[name];\n\n      return hasError ? shouldDisplay : false;\n    };\n\n    return (\n      <>\n        {isMessageSendFormShowed\n          ? (\n            <MessageSendForm onSubmit={this.handleSubmit} encType=\"multipart/form-data\">\n              {sendFormConfig.inputs.map((input) => (\n                <Fragment key={input.id}>\n                  <Input\n                    id={input.id}\n                    type={input.type}\n                    name={input.name}\n                    label={input.label}\n                    placeholder={input.placeholder}\n                    onChange={this.handleInputChange}\n                    onBlur={this.handleInputBlur}\n                    inputHalfLeft={input.inputHalfLeft}\n                    inputHalfRight={input.inputHalfRight}\n                    value={this.state}\n                    error={shouldDisplayInputError(input.name)}\n                    errorMessage={input.errorMessage}\n                  />\n                </Fragment>\n              ))}\n\n              <Textarea\n                id={sendFormConfig.textarea.id}\n                name={sendFormConfig.textarea.name}\n                label={sendFormConfig.textarea.label}\n                placeholder={sendFormConfig.textarea.placeholder}\n                value={this.state}\n                onChange={this.handleInputChange}\n                onBlur={this.handleInputBlur}\n                error={shouldDisplayInputError(sendFormConfig.textarea.name)}\n                errorMessage={sendFormConfig.textarea.errorMessage}\n              />\n\n              <FileAttachmentContainer />\n\n              <Button\n                type={sendFormConfig.submitButton.type}\n                disabled={isDisabled}\n                buttonText={sendFormConfig.submitButton.buttonText}\n              />\n            </MessageSendForm>\n          )\n          : (\n            <InfoBlock\n              infoBlockHeading={sendFormConfig.infoBlock.heading}\n              infoBlockMessage={\n                `Совсем скоро сообщение вылетит из сервера, и будет двигаться в сторону почты получателя\n                 «${receiverEmail}»\n                 со скоростью электронов.`\n              }\n              hideBlockOnTimer={this.toggleInfoBlock}\n            />\n          )}\n      </>\n    );\n  }\n}\n\nMessageSendFormContainer.propTypes = {\n  getInputVal: PropTypes.func,\n  sentMessageInfo: PropTypes.func,\n  sendForm: PropTypes.func,\n  resetFormInStore: PropTypes.func,\n  getMessageID: PropTypes.func,\n};\n\nMessageSendFormContainer.defaultProps = {\n  getInputVal: () => { },\n  sentMessageInfo: () => { },\n  sendForm: () => { },\n  resetFormInStore: () => { },\n  getMessageID: () => { },\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getInputVal: (name, value) => dispatch(getInputValue(name, value)),\n    sentMessageInfo: (date, subject) => dispatch(getSentMessageInfo(date, subject)),\n    resetFormInStore: () => dispatch(resetFormState()),\n    sendForm: () => dispatch(sendFilledForm()),\n    getMessageID: () => dispatch(getSentMessageID()),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(MessageSendFormContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport generateKey from '../../utilities/generateKey';\n\nimport './Table.css';\n\nfunction Table({ data, className }) {\n  const classes = classNames(\n    'Table',\n    className,\n  );\n\n  return (\n    <table className={classes}>\n      <thead>\n        <tr className=\"Table-rowHeading\">\n          <th className=\"Table-cell Table-cellHeading\">Дата</th>\n          <th className=\"Table-cell Table-cellHeading\">Тема</th>\n          <th className=\"Table-cell Table-cellHeading\">Статус</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((item) => (\n          <tr className=\"Table-row\" key={generateKey()}>\n            <td className=\"Table-cell\">{item.date}</td>\n            <td className=\"Table-cell\">\n              <span className=\"Table-cellMessageTheme\">{item.subject}</span>\n            </td>\n            <td className=\"Table-cell Table-cellStatus\">\n              {item.statusValue > -1 && <span className=\"is-waiting\">{item.status}</span>}\n              {item.statusValue < -1 && <span className=\"is-error\">{item.status}</span>}\n              {item.statusValue === -1 && <span className=\"is-success\">{item.status}</span>}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.string,\n    subject: PropTypes.string,\n    status: PropTypes.string,\n  })),\n  className: PropTypes.string,\n};\n\nTable.defaultProps = {\n  data: [{\n    date: '',\n    subject: '',\n    status: '',\n  }],\n  className: '',\n};\n\nexport default Table;\n","export const isObjectsEqual = (objFirst, objSecond) => (typeof objFirst === 'object' && Object.keys(objFirst).length > 0\n  ? Object.keys(objFirst).length === Object.keys(objSecond).length\n  && Object.keys(objFirst).every((key) => isObjectsEqual(objFirst[key], objSecond[key]))\n  : objFirst === objSecond);\n\nexport const isArraysOfObjectsEqual = (arrFirst, arrSecond) => arrFirst.length === arrSecond.length\n  && arrFirst.every((element, index) => isObjectsEqual(element, arrSecond[index]));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Table from '../components/table/Table';\nimport { requestDeliveryStatus } from '../actions/networkRequestsActions';\n\nimport { isArraysOfObjectsEqual } from '../utilities/isEqual';\n\nclass SendedMessagesListContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.checkUpdates = this.checkUpdates.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.checkUpdates, 10000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { sendedMessages } = this.props;\n\n    if (!isArraysOfObjectsEqual(prevProps.sendedMessages, sendedMessages)) {\n      this.interval = setInterval(this.checkUpdates, 10000);\n    }\n\n    if (isArraysOfObjectsEqual(prevProps.sendedMessages, sendedMessages)) {\n      clearInterval(this.interval);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  checkUpdates() {\n    const { getMessageStatus, sendedMessages } = this.props;\n\n    sendedMessages.forEach((message) => {\n      if (message.statusValue > -1) {\n        getMessageStatus(message.id);\n      }\n    });\n  }\n\n  render() {\n    const { sendedMessages } = this.props;\n    return (\n      <>\n        {sendedMessages.length < 1\n          ? <p>Сообщения ещё не отправлялись</p>\n          : (\n            <Table\n              data={sendedMessages}\n            />\n          )}\n      </>\n    );\n  }\n}\n\nSendedMessagesListContainer.propTypes = {\n  sendedMessages: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    date: PropTypes.string,\n    subject: PropTypes.string,\n    status: PropTypes.string,\n    statusValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  })),\n  getMessageStatus: PropTypes.func,\n};\n\nSendedMessagesListContainer.defaultProps = {\n  sendedMessages: [{\n    id: '',\n    date: '',\n    subject: '',\n    status: '',\n    statusValue: '',\n  }],\n  getMessageStatus: () => { },\n};\n\nfunction mapStateToProps({ sendFormReducer }) {\n  return {\n    sendedMessages: sendFormReducer.sendedMessages,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getMessageStatus: (id) => dispatch(requestDeliveryStatus(id)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendedMessagesListContainer);\n","/* eslint-disable class-methods-use-this */\nimport React, { Component } from 'react';\nimport Icon from '../../components/icon/Icon';\nimport MessageSendFormContainer from '../../containers/MessageSendFormContainer';\nimport SendedMessagesListContainer from '../../containers/SendedMessagesListContainer';\n\nimport './AppLayout.css';\nimport LogoIcon from '../../icons/LOGO.svg';\n\nclass AppLayout extends Component {\n  constructor(props) {\n    super(props);\n    this.preventFileDrop = this.preventFileDrop.bind(this);\n    this.preventFileDragover = this.preventFileDragover.bind(this);\n  }\n\n  preventFileDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  preventFileDragover(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  render() {\n    return (\n      <div className=\"AppLayoutWrapper\" onDrop={this.preventFileDrop} onDragOver={this.preventFileDragover}>\n        <div className=\"AppLogoWrapper\">\n          <Icon src={LogoIcon} alt=\"App logo\" className=\"AppLogo\" />\n        </div>\n        <div className=\"u-marginBottom\">\n          <MessageSendFormContainer />\n        </div>\n        <section className=\"SendedMessagesInfo u-marginBottom\">\n          <h2 className=\"Heading SendedMessagesInfo-mainHeading  u-letterSpacing\">Отправленные сообщения</h2>\n          <SendedMessagesListContainer />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './layout/app-layout/AppLayout';\n\nfunction App() {\n  return (\n    <AppLayout />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}